var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _tensorflowTfjs = require("@tensorflow/tfjs");
  var _jsxFileName = "/home/thagichu/Desktop/SANDBOX/tensorflow-color-classifier/src/screens/HomeScreen/index.jsx", _s = $RefreshSig$();
  // import data from "./colorData.json";
  const generateRandomColor = () => {
    return Math.floor(Math.random() * 256);
  };
  function HomeScreen() {
    _s();
    const model = _react.useRef();
    const [data, setdata] = _react.useState([]);
    const [red, setRed] = _react.useState();
    const [green, setGreen] = _react.useState();
    const [blue, setBlue] = _react.useState();
    const [xs, setXs] = _react.useState([]);
    const [ys, setYs] = _react.useState([]);
    const [labels, setLabels] = _react.useState(["Red", "Green", "Blue", "Yellow", "Brown", "Purple", "Pink", "Grey"]);
    _react.useEffect(() => {
      model.current = _tensorflowTfjs.sequential();
      const hidden = _tensorflowTfjs.layers.dense({
        units: 16,
        inputShape: [3],
        activation: "sigmoid"
      });
      const output = _tensorflowTfjs.layers.dense({
        units: 9,
        activation: "softmax"
      });
      model.current.add(hidden);
      model.current.add(output);
      const LEARNING_RATE = 0.25;
      const optimizer = _tensorflowTfjs.train.sgd(LEARNING_RATE);
      model.current.compile({
        optimizer: optimizer,
        loss: "categoricalCrossentropy",
        metrics: ["accuracy"]
      });
      return () => {};
    }, []);
    _react.useEffect(() => {
      setRed(generateRandomColor());
      setGreen(generateRandomColor());
      setBlue(generateRandomColor());
      return () => {};
    }, [data]);
    const onSelectColor = color => {
      setdata(oldData => [...oldData, {
        red,
        green,
        blue,
        label: color
      }]);
    };
    const prepData = () => {
      let inputColors = [];
      let outputLabels = [];
      const MAX_RANGE = 255;
      for (let index = 0; index < data.length; index++) {
        const item = data[index];
        inputColors.push([item.red / MAX_RANGE, item.green / MAX_RANGE, item.blue / MAX_RANGE]);
        outputLabels.push(labels.indexOf(item.label));
      }
      setXs(inputColors);
      setYs(outputLabels);
    };
    async function train() {
      // This is leaking https://github.com/tensorflow/tfjs/issues/457
      await model.fit(xs, ys, {
        shuffle: true,
        validationSplit: 0.1,
        epochs: 100,
        callbacks: {
          onEpochEnd: (epoch, logs) => {
            console.log(epoch);
            lossP.html("loss: " + logs.loss.toFixed(5));
          },
          onBatchEnd: async (batch, logs) => {
            await _tensorflowTfjs.nextFrame();
          },
          onTrainEnd: () => {
            console.log("finished");
          }
        }
      });
    }
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        style: {
          textAlign: "center",
          maxWidth: 900,
          margin: "0 auto"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 105,
          columnNumber: 5
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 106,
          columnNumber: 7
        }
      }, " Training Data ðŸ“¦"), /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 107,
          columnNumber: 7
        }
      }, "Select Training Data"), /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 108,
          columnNumber: 7
        }
      }, "What color is this?"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        style: {
          display: "flex",
          flexDirection: "column",
          justifyContent: "center",
          alignItems: "center",
          marginBottom: "1rem"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 109,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("div", {
        style: {
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          width: 200,
          height: 200,
          borderRadius: 10,
          borderColor: "#000000",
          borderWidth: 10,
          backgroundColor: `rgb(${red},${green},${blue})`
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 118,
          columnNumber: 9
        }
      }), /*#__PURE__*/_reactDefault.default.createElement("div", {
        style: {
          padding: "1rem",
          display: "flex",
          flexWrap: "wrap"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 132,
          columnNumber: 9
        }
      }, labels.map((item, idx) => /*#__PURE__*/_reactDefault.default.createElement("div", {
        onClick: () => onSelectColor(item),
        style: {
          backgroundColor: item,
          padding: ".5rem 1rem",
          margin: ".5rem",
          color: "white",
          borderRadius: ".5rem",
          cursor: "pointer"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 141,
          columnNumber: 13
        }
      }, idx + "-" + item)))), /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 158,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 159,
          columnNumber: 9
        }
      }, "1 - Selected Training Data"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        onClick: () => setdata([]),
        style: {
          margin: ".5rem",
          color: "red",
          cursor: "pointer",
          textTransform: "uppercase"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 160,
          columnNumber: 9
        }
      }, "Reset Training Data"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 172,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("div", {
        style: {
          display: "flex",
          flexWrap: "wrap"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 173,
          columnNumber: 11
        }
      }, data.map(item => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 176,
              columnNumber: 17
            }
          }, /*#__PURE__*/_reactDefault.default.createElement("div", {
            style: {
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              borderRadius: 10,
              margin: ".3rem",
              width: 100,
              height: 100,
              backgroundColor: `rgb(${item.red},${item.green},${item.blue})`
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 177,
              columnNumber: 19
            }
          }, /*#__PURE__*/_reactDefault.default.createElement("span", {
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 189,
              columnNumber: 21
            }
          }, item.label)))
        );
      })))), /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 198,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 199,
          columnNumber: 9
        }
      }, "2 - Prepare Selected Training Data from Training"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        onClick: () => prepData(),
        style: {
          margin: ".5rem",
          color: "red",
          cursor: "pointer",
          textTransform: "uppercase"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 200,
          columnNumber: 9
        }
      }, "Prepare Data"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        style: {
          display: "flex",
          // flexDirection: "column",
          justifyContent: "center",
          alignItems: "center"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 211,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 219,
          columnNumber: 11
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 220,
          columnNumber: 13
        }
      }, "Input Data"), xs.map(item => /*#__PURE__*/_reactDefault.default.createElement("div", {
        style: {
          display: "flex"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 222,
          columnNumber: 15
        }
      }, item.map(itm => /*#__PURE__*/_reactDefault.default.createElement("div", {
        style: {
          marginRight: "0.5rem"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 224,
          columnNumber: 19
        }
      }, itm))))), /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 229,
          columnNumber: 11
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 230,
          columnNumber: 13
        }
      }, "Output Data"), ys.map(item => /*#__PURE__*/_reactDefault.default.createElement("div", {
        style: {
          display: "flex"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 232,
          columnNumber: 15
        }
      }, item))))), /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 238,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 239,
          columnNumber: 9
        }
      }, "3 - Create Tensors from the Training Data from Training"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        onClick: () => prepData(),
        style: {
          margin: ".5rem",
          color: "red",
          cursor: "pointer",
          textTransform: "uppercase"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 240,
          columnNumber: 9
        }
      }, "Create Tensors")))
    );
  }
  _s(HomeScreen, "43KXJs/RIfgftC5/N/XaRB2K02c=");
  _c = HomeScreen;
  exports.default = HomeScreen;
  var _c;
  $RefreshReg$(_c, "HomeScreen");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
